name: SmartVisionQA Analysis

# Trigger manual
on:
  workflow_dispatch:
    inputs:
      publish_results:
        description: 'Publicar resultados en GitHub Pages'
        required: false
        default: true
        type: boolean

jobs:
  visual-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Run Visual Analysis
        run: |
          # Construir imagen localmente
          docker build -t smartvisionqa:latest .
          
          # Crear directorio para resultados
          mkdir -p ./results
          
          # Ejecutar an√°lisis en contenedor
          docker run --rm \
            -v "$(pwd)/results:/app/results" \
            smartvisionqa:latest

      - name: Upload Results as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: visual-qa-results
          path: results/
          retention-days: 30

      - name: Setup Pages
        if: inputs.publish_results == true
        uses: actions/configure-pages@v4

      - name: Prepare Pages Content
        if: inputs.publish_results == true
        run: |
          mkdir -p _site
          cp -r results/* _site/
          
          # Crear index.html para navegaci√≥n
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>SmartVisionQA Results</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .file-list { list-style: none; padding: 0; }
                  .file-list li { margin: 10px 0; }
                  .file-list a { 
                      text-decoration: none; 
                      padding: 10px 15px; 
                      background: #f0f0f0; 
                      border-radius: 5px; 
                      display: inline-block;
                  }
                  .file-list a:hover { background: #e0e0e0; }
                  .html-report { color: #2196F3; }
                  .json-report { color: #4CAF50; }
                  .screenshot { color: #FF9800; }
              </style>
          </head>
          <body>
              <h1>SmartVisionQA Analysis Results</h1>
              <ul class="file-list">
          EOF
          
          # Listar archivos de resultados
          for file in _site/*.html; do
              if [ -f "$file" ]; then
                  filename=$(basename "$file")
                  echo "<li><a href=\"$filename\" class=\"html-report\">üìä $filename</a></li>" >> _site/index.html
              fi
          done
          
          for file in _site/*.json; do
              if [ -f "$file" ]; then
                  filename=$(basename "$file")
                  echo "<li><a href=\"$filename\" class=\"json-report\">üìÑ $filename</a></li>" >> _site/index.html
              fi
          done
          
          for file in _site/*.png; do
              if [ -f "$file" ]; then
                  filename=$(basename "$file")
                  echo "<li><a href=\"$filename\" class=\"screenshot\">üñºÔ∏è $filename</a></li>" >> _site/index.html
              fi
          done
          
          echo "</ul></body></html>" >> _site/index.html

      - name: Upload to Pages
        if: inputs.publish_results == true
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/

      - name: Deploy to Pages
        if: inputs.publish_results == true
        id: deployment
        uses: actions/deploy-pages@v4

  cleanup:
    runs-on: ubuntu-latest
    needs: visual-analysis
    if: always()
    steps:
      - name: Clean up Docker
        run: docker system prune -f